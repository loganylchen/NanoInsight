reference:
  genome:
  transcriptome:
  annotation:
  transtable:
  knowntable:

threads:
  minimap2: 12

params:
  minimap2_genion: -c -y -x splice -k 12 -w 3 --hard-mask-level -N 100
  minimap2_longgf: -ax splice -uf
  aeron_genome_alignment: --try-all-seeds --seeds-mxm-length 17 --seeds-mem-count 15 -b 35 --greedy-length

misc:
  genion_dup_file_link: ftp://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/genomicSuperDups.txt.gz

fusion:
  genion: True
  longgf: True
  jaffal: True
  aeron: True

#input files at top: check them!

# all input files must be in the folder ./input/
# use the full file name, including file ending

# input splice graph
# format must be .vg
graph: HumanUpdated38V5.gfa

# reference transcripts
# format can be either fasta/fastq, gzipped or not
transcripts: HumanTranscriptsReduced.fa
# sequenced reads
# format can be either fasta/fastq, gzipped or not
# for more files, add them in new lines starting with "- "
# NOTE: the file names without ending must be unique! You cannot have eg. reads.fq and reads.fa
reads: humanNA12878dRNA.fasta

#optional params below: default values will probably work

#size of the seed hits. Fewer means more accurate but slower alignments.
seedsize: 17
#max number of seeds. Fewer means faster but more inaccurate alignment
maxseeds: 15

fusion_max_error_rate: 0.2
fusion_min_score_difference: 200

#options: --greedy-length --greedy-score --greedy-E --schedule-score --schedule-length --schedule-inverse-E-product --schedule-inverse-E-sum
alignment_selection: --greedy-length
alignment_E_cutoff: 1

#bandwidth for the aligner. Higher means more accurate but slower alignment.
aligner_bandwidth: 35

gtffile: HomoSapiens.gtf

#file paths

# https://bitbucket.org/dilipdurai/aeron/
scripts: /MMCI/MS/LongRNA/work/mikko/AERON_runs/run_20200515_threeprime/Aeron/AeronScripts
# https://github.com/maickrau/GraphAligner
binaries: /MMCI/MS/LongRNA/work/mikko/AERON_runs/run_20200515_threeprime/Aeron/Binaries
# needed to convert mummer seeds to .gam seeds
vgpath: /MMCI/MS/LongRNA/work/mikko/vg/vg
